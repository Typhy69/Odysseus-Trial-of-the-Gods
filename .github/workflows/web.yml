name: Godot 4 HTML5 Export (Minimal, Root Project)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

defaults:
  run:
    shell: bash

jobs:
  export:
    runs-on: ubuntu-latest
    container: barichello/godot-ci:4.2.2

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Verify project.godot at repo root
        run: |
          set -eux
          test -f project.godot || { echo "project.godot NOT at repo root"; exit 1; }
          echo "Found project.godot at repo root"

      - name: Ensure Web export preset (create/overwrite)
        run: |
          set -eux
          printf '%s\n' \
"[preset.0]" \
"name=\"Web\"" \
"platform=\"Web\"" \
"export_filter=\"all_resources\"" \
"export_path=\"build/web/index.html\"" \
"" \
"[preset.0.options]" \
"binary_format/embed_pck=true" \
"html/canvas_resize_policy=2" > export_presets.cfg
          sed -n '1,120p' export_presets.cfg

      - name: Ensure icon exists (placeholder if missing)
        run: |
          set -eux
          ICON=$(grep -E '^config/icon=' project.godot | cut -d\" -f2 || true)
          if [ -n "$ICON" ]; then
            REL="${ICON#res://}"
            [ -f "$REL" ] || {
              mkdir -p "$(dirname "$REL")"
              printf '%s\n' \
'<svg xmlns="http://www.w3.org/2000/svg" width="128" height="128"><rect width="100%" height="100%" fill="#1e1e2e"/><circle cx="64" cy="64" r="36" fill="#f59e0b"/><text x="64" y="72" font-size="20" text-anchor="middle" fill="#111">OD</text></svg>' > "$REL"
            }
          fi

      - name: Check main scene exists
        run: |
          set -eux
          MAIN=$(grep -E '^run/main_scene=' project.godot | cut -d\" -f2 | sed 's#^res://##')
          [ -n "$MAIN" ] || { echo "run/main_scene not set in project.godot"; exit 1; }
          [ -f "$MAIN" ] || { echo "Main scene not found at $MAIN"; exit 1; }

      - name: Export HTML5 (verbose)
        run: |
          set -eux
          mkdir -p build/web
          godot --headless --verbose --export-release "Web" build/web/index.html | tee export_log.txt
          cp build/web/index.html build/web/404.html || true
          ls -la build/web || true

      - name: Upload build or logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-build-or-logs
          path: |
            build/web
            export_log.txt
            export_presets.cfg
            project.godot

      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
          force_orphan: true
