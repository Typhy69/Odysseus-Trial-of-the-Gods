name: Godot Web Export (Minimal + Templates)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  export:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.2.2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Godot 4.2.2 export templates
        run: |
          set -e
          mkdir -p ~/.local/share/godot/export_templates/4.2.2.stable
          wget -O /tmp/templates.tpz \
            https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_export_templates.tpz
          unzip -q /tmp/templates.tpz -d ~/.local/share/godot/export_templates/4.2.2.stable

      - name: Verify project.godot at repo root
        run: |
          set -e
          test -f project.godot || { echo "project.godot NOT at repo root"; exit 1; }
          echo "Found project.godot at repo root"

      - name: Write minimal Web preset
        run: |
          set -e
          cat > export_presets.cfg <<'EOF'
          [preset.0]
          name="Web"
          platform="Web"
          export_path="build/web/index.html"

          [preset.0.options]
          binary_format/embed_pck=true
          html/canvas_resize_policy=2
          EOF
          sed -n '1,120p' export_presets.cfg

      - name: Ensure icon exists (placeholder if missing)
        run: |
          set -e
          ICON=$(grep -E '^config/icon=' project.godot | cut -d\" -f2 || true)
          if [ -n "$ICON" ]; then
            REL=${ICON#res://}
            if [ ! -f "$REL" ]; then
              mkdir -p "$(dirname "$REL")"
              echo '<svg xmlns="http://www.w3.org/2000/svg" width="128" height="128"><rect width="100%" height="100%" fill="#1e1e2e"/><circle cx="64" cy="64" r="36" fill="#f59e0b"/><text x="64" y="72" font-size="20" text-anchor="middle" fill="#111">OD</text></svg>' > "$REL"
            fi
          fi

      - name: Check main scene exists
        run: |
          set -e
          MAIN=$(grep -E '^run/main_scene=' project.godot | cut -d\" -f2 | sed 's#^res://##')
          [ -n "$MAIN" ] || { echo "run/main_scene not set in project.godot"; exit 1; }
          [ -f "$MAIN" ] || { echo "Main scene not found at $MAIN"; exit 1; }

      - name: Export HTML5
        run: |
          set -e
          mkdir -p build/web
          godot --headless --export-release "Web" build/web/index.html
          cp build/web/index.html build/web/404.html || true

      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
          force_orphan: true
