name: Godot 4 HTML5 Export (Diagnostic+Logs)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

defaults:
  run:
    shell: bash

jobs:
  export:
    runs-on: ubuntu-latest
    container: barichello/godot-ci:4.2.2  # Godot 4.2.2 + HTML5 templates

    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Show repo tree
        run: |
          set -euxo pipefail
          pwd
          ls -la
          echo "---- scenes/"; ls -la scenes || true
          echo "---- scripts/"; ls -la scripts || true
          echo "---- audio/music"; ls -la audio/music || true

      - name: Ensure Web export preset
        run: |
          set -euxo pipefail
          cat > export_presets.cfg <<'EOF'
          [preset.0]
          name="Web"
          platform="Web"
          export_filter="all_resources"
          export_path="build/web/index.html"

          [preset.0.options]
          binary_format/embed_pck=true
          html/canvas_resize_policy=2
          EOF
          sed -n '1,200p' export_presets.cfg

      - name: Verify project.godot at root
        run: |
          set -euxo pipefail
          test -f project.godot || (echo "project.godot NOT found at repo root" && exit 1)
          echo "==== project.godot ===="
          sed -n '1,200p' project.godot || true

      - name: Temporarily disable AudioManager autoload if missing
        run: |
          set -euxo pipefail
          if ! [ -f scripts/AudioManager.gd ]; then
            awk '
              /^\[autoload\]/{print; next}
              /^\s*AudioManager=.*res:\/\/scripts\/AudioManager.gd/ { print "; " $0; next }
              { print }
            ' project.godot > project.tmp && mv project.tmp project.godot
            echo "⚠️ scripts/AudioManager.gd not found; autoload commented for this run."
          fi

      - name: Godot version & pre-import (logs to editor_log.txt)
        run: |
          set -euxo pipefail
          godot --version |& tee editor_log.txt
          godot --headless -e --quit |& tee -a editor_log.txt

      - name: Check main scene exists (and print it)
        run: |
          set -euxo pipefail
          MAIN=$(grep -E '^run/main_scene=' project.godot | cut -d\" -f2 | sed 's#^res://##')
          echo "Main scene from project.godot: $MAIN"
          ls -la "$(dirname "$MAIN")" || true
          test -f "$MAIN" || (echo "❌ Main scene not found at $MAIN" && exit 1)

      - name: Export HTML5 (verbose → export_log.txt)
        run: |
          set -euxo pipefail
          mkdir -p build/web
          godot --headless --verbose --export-release "Web" build/web/index.html |& tee export_log.txt
          ls -la build/web || true

      - name: 404 fallback
        if: success()
        run: cp build/web/index.html build/web/404.html || true

      - name: Upload build or logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-build-or-logs
          path: |
            build/web
            export_log.txt
            editor_log.txt
            export_presets.cfg
            project.godot
            .godot/**/*
            .import/**/*
            scenes/**/*
            scripts/**/*
